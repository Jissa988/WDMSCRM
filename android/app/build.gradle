  plugins {
    id "com.android.application"
    id "kotlin-android"
    id "dev.flutter.flutter-gradle-plugin"
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'com.google.firebase.crashlytics'
    id 'com.google.gms.google-services'

}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}
apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'


android {
    namespace "com.example.customer_portal"
//    compileSdk flutter.compileSdkVersion
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
        applicationId "com.example.customer_portal"
        // You can update the following values to match your application needs.
        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
//        minSdkVersion flutter.minSdkVersion
        minSdkVersion 21
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true

    }

    buildTypes {
        release {
            // TODO: Add your own signing config for the release build.
            // Signing with the debug keys for now, so `flutter run --release` works.
            signingConfig signingConfigs.debug
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'com.android.support:multidex:2.0.1' // or the latest version
//    implementation "com.google.firebase:firebase-analytics-ktx:21.3.0"
    implementation platform("com.google.firebase:firebase-bom:32.3.1")
    implementation "com.google.firebase:firebase-messaging:14.7.0" // Latest version
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
//    implementation project(':firebase_analytics')
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics:20.0.0'

}
tasks.whenTaskAdded { task ->
    if (task.name == 'mapDebugSourceSetPaths') {
        task.dependsOn ':app:processDebugGoogleServices'
    }
}

//plugins {
//    id "com.android.application"
//    id "kotlin-android"
//    id "com.google.gms.google-services"
//    id 'com.google.firebase.crashlytics'
////    id 'org.jetbrains.kotlin.android'
////    id 'kotlin-kapt'
//    id "dev.flutter.flutter-gradle-plugin"
//}
//def localProperties = new Properties()
//def localPropertiesFile = rootProject.file('local.properties')
//if (localPropertiesFile.exists()) {
//    localPropertiesFile.withReader('UTF-8') { reader ->
//        localProperties.load(reader)
//    }
//}
//
//def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
//if (flutterVersionCode == null) {
//    flutterVersionCode = '1'
//}
//
//def flutterVersionName = localProperties.getProperty('flutter.versionName')
//if (flutterVersionName == null) {
//    flutterVersionName = '1.0'
//}
//apply plugin: 'com.google.gms.google-services'
//apply plugin: 'com.google.firebase.crashlytics'
//android {
//    namespace "com.example.customer_portal"
////    compileSdk flutter.compileSdkVersion
//    compileSdkVersion 34
////    ndkVersion flutter.ndkVersion
//
//    compileOptions {
//        sourceCompatibility JavaVersion.VERSION_1_8
//        targetCompatibility JavaVersion.VERSION_1_8
//    }
//
//    kotlinOptions {
//        jvmTarget = '1.8'
//    }
//
//    sourceSets {
//        main.java.srcDirs += 'src/main/kotlin'
//    }
//
//    defaultConfig {
//        // TODO: Specify your own unique Application ID (https://developer.android.com/studio/build/application-id.html).
//        applicationId "com.example.customer_portal"
//
//        // You can update the following values to match your application needs.
//        // For more information, see: https://docs.flutter.dev/deployment/android#reviewing-the-gradle-build-configuration.
////        minSdkVersion flutter.minSdkVersion
//        minSdkVersion 21
//        targetSdkVersion 34
////        targetSdkVersion flutter.targetSdkVersion
////        versionCode flutterVersionCode.toInteger()
////        versionName flutterVersionName
//        versionCode 1
//        versionName "1.0.0"
//        multiDexEnabled true
//
//    }
//
//    buildTypes {
//        release {
//            // TODO: Add your own signing config for the release build.
//            // Signing with the debug keys for now, so `flutter run --release` works.
//            signingConfig signingConfigs.debug
//        }
//    }
//}
//
////android {
////    compileSdkVersion 34
////    defaultConfig {
////        namespace "com.example.customer_portal"
////        minSdkVersion 21
////        targetSdkVersion 33
////        versionCode 1
////        versionName "1.0"
////    }
////    buildTypes {
////        release {
////            minifyEnabled false
////            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
////        }
////    }
////}
//
//dependencies {
////    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
//
//    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation 'androidx.core:core-ktx:1.5.0' // Update to the latest version
//    implementation 'com.google.firebase:firebase-analytics:20.0.1' // Update to the latest version
//
//    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
//    implementation 'com.android.support:multidex:2.0.1' // or the latest version
//    implementation "com.google.firebase:firebase-analytics-ktx:21.3.0"
//    implementation platform("com.google.firebase:firebase-bom:32.3.1")
//    implementation "com.google.firebase:firebase-messaging:14.7.0" // Latest version
//    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.0'
//
//    implementation 'com.google.firebase:firebase-crashlytics-ktx'
//    implementation 'com.google.firebase:firebase-analytics-ktx'
//    implementation 'com.google.android.material:material:1.5.0'
//    implementation 'androidx.appcompat:appcompat:1.4.0'
//
//
//}
//tasks.whenTaskAdded { task ->
//    if (task.name == 'mapDebugSourceSetPaths') {
//        task.dependsOn ':app:processDebugGoogleServices'
//    }
//}
